package hwSecondWeek;

public interface Map<K, V> {

	 /**
	     * Возвращает количество элементов в этом наборе.
	     * @return количество элементов в этом наборе
	     */
	 int size();
	 
	 /**
	     * Возвращает true</tt> если набор пустой.
	     * @return true</tt> если набор пустой.
	     */
	    boolean isEmpty();
	    
	    /**
	     * Возвращает true если набор содержал пару под данным ключем.
	     * 
	     * @param key искомый ключ
	     * @return true если набор содержал пару под данным ключем.
	     * @throws NullPointerException если ключ null
	     */
	    boolean containsKey(K key);
	    
	    /**
	     * Возвращает значение ассоциированное с данным ключем.
	     * 
	     * @param key ключ ассоциированный с искомым значением
	     * @return значение ассоциированное с данным ключем или null, если такой пары нет.
	     * @throws NullPointerException если ключ null
	     */
	    V get(K key);
	    
	    /**
	     * Ассоциирует данное значение с данным ключем в этом наборе.
	     * Если набор содержит пару с данным ключем, 
	     * старое значение замещается новым, старое возвращается,
	     * иначе возвращается null.
	     *
	     * @param key ключ с которым ассоциируется данное значение
	     * @param value значение ассоциируемое с данным ключем
	     * @return значение которое ранее ассоциировалось с данным ключем 
	     * или null, если такого значения не было
	     * 
	     * @throws NullPointerException если ключ null
	     */
	    V put(K key, V value);
	    
	    /**
	     * Удаляет из набора пару под заданным ключем
	     * Если набор содержит пару с данным ключем, 
	     * значение из удаленной пары возвращается,
	     * иначе возвращается null.
	     * 
	     * @param key ключ удаляемой пары
	     * @return значение которое ранее ассоциировалось с данным ключем 
	     * или null, если такого значения не было
	     * @throws NullPointerException если ключ null
	     */
	    V remove(K key);
	    
	    
	    /**
	     * Удаляет все элементы набора
	     */
	    void clear();
	    
	}

